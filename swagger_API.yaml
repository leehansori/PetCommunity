openapi: 3.0.0
info:
  version: 1.0.0
  title: pet_community
  description: 'pet_community project'
servers:
  - url: http://localhost:5000
tags:
  - name: member
    description: 회원 관련 API
  - name: board
    description: 게시판 관련 API
  - name: posting
    description: 게시물 관련 API
  - name: reply
    description: 댓글 관련 API
paths:
  /member/register:
    post:
      tags:
        - member
      summary: 회원 가입
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: "아이디 (이메일 형식)"
                  pw:
                    type: string
                    description: "패스워드"
                  name:
                    type: string
                    description: "이름"
                  phone:
                    type: string
                    description: "핸드폰 번호"
      responses:
        '00':
          description: "성공"
        '10':
          description: "입력값이 유효하지 않음"
        '20':
          description: "이미 존재하는 id입니다."
  /member/chkpw:
    post:
      tags:
        - member
      summary: 비밀번호 확인
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  pw:
                    type: string
                    description: "패스워드"
                  check_pw:
                    type: string
                    description: "패스워드 재입력"
      responses:
        '00':
          description: "성공"
        '10':
          description: "입력값이 유효하지 않음"
        '20':
          description: "비밀번호가 일치하지 않습니다."
  /member/login:
    post:
      tags:
        - member
      summary: 로그인
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                    description: "아이디"
                  userPW:
                    type: string
                    description: "패스워드"
      responses:
        '00':
          description: "로그인 성공"
        '10':
          description: "ID,PW를 입력해주세요"
        '20':
          description: "일치하는 회원 정보가 없습니다."
  /member/logout:
    get:
      tags:
        - member
      summary: 로그아웃
      responses:
        '00':
          description: "로그아웃 성공"
  /board/register:
    post:
      tags:
        - board
      summary: 게시판 추가
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: "게시판 제목"
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /board/list:
    get:
      tags:
        - board
      summary: 게시판 목록 조회
      responses:
        '200':
          description: 로그인한 회원의 게시판 목록 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  users:
                    type: object
                    example: [{ "board_id": 1, "title": "게시판 제목" },
                              { "board_id": 2, "title": "게시판 제목" },]
  /board:
    delete:
      tags:
        - board
      summary: "게시판 삭제"
      description: "요청 경로에 board_id를 담아 보냄"
      parameters:
        - in: query
          name: board_id
          required: true
          description: 게시판 아이디
          schema:
            type: integer
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /post/register:
    post:
      tags:
        - posting
      summary: 특정 게시판에 게시물 추가
      parameters:
        - in: query
          name: board_id
          required: true
          description: 게시판 아이디
          schema:
            type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: "게시물 제목"
                  content:
                    type: string
                    description: "게시물 내용"
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /post/list:
    get:
      tags:
        - posting
      summary: 특정 게시판의 게시물 목록 조회
      parameters:
        - in: query
          name: board_id
          required: true
          description: 게시판 아이디
          schema:
            type: integer
      responses:
        '200':
          description: 특정 게시판의 게시물 목록 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  users:
                    type: object
                    example: [{ "title": "게시물 제목", "content": "게시물 내용", "regdate": "등록 날짜", "updatedate": "수정 날짜"},
                              { "title": "게시물 제목", "content": "게시물 내용", "regdate": "등록 날짜", "updatedate": "수정 날짜"},]
  /post:
    put:
      tags:
        - posting
      summary: 게시물 수정
      parameters:
        - in: query
          name: posting_id
          required: true
          description: 게시물 아이디
          schema:
            type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: "제목"
                  content:
                    type: string
                    description: "내용"
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /post/{posting_id}:
    delete:
      tags:
        - posting
      summary: "게시물 삭제"
      parameters:
        - in: query
          name: posting_id
          required: true
          description: 게시물 아이디
          schema:
            type: integer
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /reply/register:
    post:
      tags:
        - reply
      summary: 특정 게시물에 댓글 추가
      parameters:
        - in: query
          name: posting_id
          required: true
          description: 게시물 아이디
          schema:
            type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                    description: "게시물 내용"
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /reply/list:
    get:
      tags:
        - reply
      summary: 특정 게시물의 댓글 목록 조회
      parameters:
        - in: query
          name: posting_id
          required: true
          description: 게시물 아이디
          schema:
            type: integer
      responses:
        '200':
          description: 특정 게시물의 댓글 목록 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  users:
                    type: object
                    example: [{ "id":"아이디", "content": "댓글 내용", "regdate": "등록 날짜", "updatedate": "수정 날짜"},
                              { "id":"아이디", "content": "댓글 내용", "regdate": "등록 날짜", "updatedate": "수정 날짜"},]
  /reply:
    put:
      tags:
        - reply
      summary: 댓글 수정
      parameters:
        - in: query
          name: reply_id
          required: true
          description: 댓글 아이디
          schema:
            type: integer
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                    description: "내용"
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."
  /reply/{reply_id}:
    delete:
      tags:
        - reply
      summary: "댓글 삭제"
      parameters:
        - in: query
          name: reply_id
          required: true
          description: 댓글 아이디
          schema:
            type: integer
      responses:
        '00':
          description: "성공"
        '30':
          description: "DB 오류"
        '40':
          description: "로그인을 해주세요."